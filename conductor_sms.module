<?php

/**
 * Implements hook_ctools_plugin_directory().
 */
function conductor_sms_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'conductor') {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function conductor_sms_ctools_plugin_api($owner, $api) {
  if ($owner == 'conductor' && ($api == 'plugins' || $api == 'workflow')) {
    return array('version' => 1.0);
  }
}

/**
 * Implements hook_sms_mobile_commons_response_alter().
 */
function conductor_sms_sms_mobile_commons_response_alter(&$output, $context) {

  $keyword = $context['keyword'];
  $number = $context['sender'];
  $message = $context['message'];

  $storage = conductor_get_storage_handler(variable_get('conductor_default_storage_handler', 'database'));
  $workflow = FALSE;
  // See if we're already having a conversation with this number.
  $pointer = $storage->loadPointer('sms_prompt:' . $number);
  if ($pointer && isset($pointer['workflowName'])) {
    $workflow = conductor_get_workflow($pointer['workflowName']);
    $resume_context = array('sms_prompt:' . $number => array($pointer['activityName'] . ':message' => $message));
    $workflow->getState()->resume($resume_context);
  }
  else if (isset($keyword)) {
    // Allow modules to specify sms keyword / workflow matches by implementing
    // hook_conductor_sms_keywords().
    $keywordMap = module_invoke_all('conductor_sms_keywords');
    $keyword = strtolower($keyword);
    $map = module_invoke_all('conductor_sms_keywords');
    // If it the keyword is set load the corresponding workflow.
    if (isset($map[$keyword]) && $workflow = conductor_get_workflow($map[$keyword])) {
      $workflow->getActivity('start')->getState()->setContext('sms_number', $number);
      $workflow->run();
    }
    watchdog('sms', $keyword . get_class($workflow));
  }
  if ($workflow && $workflow->getState()->getContext('sms_response')) {
    $output = $workflow->getState()->getContext('sms_response');
  }
}

