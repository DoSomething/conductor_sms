<?php

/**
 * Implements hook_ctools_plugin_directory().
 */
function conductor_sms_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'conductor') {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function conductor_sms_ctools_plugin_api($owner, $api) {
  if ($owner == 'conductor' && ($api == 'plugins' || $api == 'workflow')) {
    return array('version' => 1.0);
  }
}

/**
 * Implements hook_sms_incoming().
 *
 * @param $op
 *   The operation, has three possible values: 'pre process', 'process', and 'post process'.
 * @param $number
 *   Is the number from which the message originated.
 * @param $message
 *   Is the text of the message.
 * @param $options
 *   Is an optional array of extended attributes for the message.
 */
function conductor_sms_sms_mobile_commons_response_alter(&$output, $message, $number) {
  $storage = conductor_get_storage_handler(variable_get('conductor_default_storage_handler', 'database'));
  // See if we're already having a conversation with this number.
  $pointer = $storage->loadPointer('sms_prompt:' . $number);
  if ($pointer && isset($pointer['workflowName'])) {
    $workflow = conductor_get_workflow($pointer['workflowName']);
    $resume_context = array('sms_prompt:' . $number => array($pointer['activityName'] . ':message' => $message));
    $workflow->getState()->resume($resume_context);
  }
  else {
    // TODO: Map a keyword to workflow
    $workflow = conductor_get_workflow('ds_sms_user_registration');
    $workflow->getActivity('start')->getState()->setContext('sms_number', $number);
    $workflow->run();
  }
  if (isset($workflow->getState()->context['sms_response'])) {
    $output = $workflow->getState()->context['sms_response'];
  }
}

